services:
    laravel.test:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - minio-setup
            - reverb
            - peerjs
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    minio:
        image: minio/minio:latest
        command: server /data --console-address ":9002"
        environment:
            MINIO_ROOT_USER: "minioadmin"
            MINIO_ROOT_PASSWORD: "minioadmin"
            MINIO_API_CORS_ALLOW_ORIGIN: "http://localhost,http://127.0.0.1,http://localhost:5173"
        volumes:
            - minio-data:/data
            - ./docker/minio/cors.json:/config/cors.json:ro
        ports:
            - "9000:9000"   # S3 API
            - "9002:9002"   # MinIO console (changed from 9001)
        networks:
            - sail

    minio-setup:
        image: minio/mc:latest
        depends_on:
            - minio
        entrypoint: >
            sh -lc '
                set -e
                # Wait for MinIO to accept connections (retry for ~2 minutes)
                for i in $$(seq 1 60); do
                mc alias set local http://minio:9000 minioadmin minioadmin && break
                echo "Waiting for MinIO... ($$i/60)"; sleep 2
                done
                # If alias still not set, fail loudly
                mc alias ls | grep -q "^local" || { echo "MinIO not reachable"; exit 1; }

                # Create bucket and lock it down
                mc mb -p local/recordings || true
                mc anonymous set none local/recordings || true

                echo "MinIO bucket ready"
            '
        volumes:
            - ./docker/minio/cors.json:/config/cors.json:ro
        networks:
            - sail
    
    reverb:
        build:
            context: './vendor/laravel/sail/runtimes/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: 'sail-8.4/app'
        ports:
            - '${REVERB_SERVER_PORT:-8080}:8080'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/html'
        working_dir: /var/www/html
        command: php artisan reverb:start --host=0.0.0.0 --port=8080 --debug
        networks:
            - sail
        depends_on:
            - mysql
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080"]
            interval: 30s
            timeout: 10s
            retries: 3
    
    peerjs:
        image: node:20-alpine
        ports:
            - '${PEERJS_PORT:-9001}:9001'
        environment:
            NODE_ENV: development
            PEERJS_PORT: 9001
        volumes:
            - '.:/app'
        working_dir: /app
        command: sh -c "npm install && node peerserver.js"
        networks:
            - sail
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "wget", "--spider", "-q", "http://localhost:9001/health"]
            interval: 30s
            timeout: 10s
            retries: 3

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    minio-data:
        driver: local
